<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinAPI</name>
    </assembly>
    <members>
        <member name="M:WinAPIforLV.WinAPIforLV.GetSystemMetrics(System.Int32)">
            <summary>
            Selected Win AI Function Calls
            </summary>
        </member>
        <member name="T:WinAPIforLV.WinAPIforLV.Dimensions">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="M:WinAPIforLV.WinAPIforLV.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                The MoveWindow function changes the position and dimensions of the specified window. For a top-level window, the
                position and dimensions are relative to the upper-left corner of the screen. For a child window, they are relative
                to the upper-left corner of the parent window's client area.
                <para>
                Go to https://msdn.microsoft.com/en-us/library/windows/desktop/ms633534%28v=vs.85%29.aspx for more
                information
                </para>
            </summary>
            <param name="hWnd">C++ ( hWnd [in]. Type: HWND )<br /> Handle to the window.</param>
            <param name="X">C++ ( X [in]. Type: int )<br />Specifies the new position of the left side of the window.</param>
            <param name="Y">C++ ( Y [in]. Type: int )<br /> Specifies the new position of the top of the window.</param>
            <param name="nWidth">C++ ( nWidth [in]. Type: int )<br />Specifies the new width of the window.</param>
            <param name="nHeight">C++ ( nHeight [in]. Type: int )<br />Specifies the new height of the window.</param>
            <param name="bRepaint">
                C++ ( bRepaint [in]. Type: bool )<br />Specifies whether the window is to be repainted. If this
                parameter is TRUE, the window receives a message. If the parameter is FALSE, no repainting of any kind occurs. This
                applies to the client area, the nonclient area (including the title bar and scroll bars), and any part of the
                parent window uncovered as a result of moving a child window.
            </param>
            <returns>
                If the function succeeds, the return value is nonzero.<br /> If the function fails, the return value is zero.
                <br />To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:WinAPIforLV.WinAPIforLV.SetTaskbarState(WinAPIforLV.WinAPIforLV.AppBarStates)">
            <summary>
            Set the Taskbar State option
            </summary>
            <param name="option">AppBarState to activate</param>
        </member>
        <member name="M:WinAPIforLV.WinAPIforLV.GetTaskbarState">
            <summary>
            Gets the current Taskbar state
            </summary>
            <returns>current Taskbar state</returns>
        </member>
    </members>
</doc>
